#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:mark c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: Optimized Models for Perovskite Performance
#+date: \today
#+AUTHOR: Panayotis Manganaris\inst{1}
#+EMAIL: pmangana@purdue.edu
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.2 (Org mode 9.5)
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [15pt, compress]
#+BEAMER_FRAME_LEVELS: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+latex_header: \institute[Mannodi Group]{Mannodi Group - Purdue MSE}
#+latex_header: \mode<beamer>{\usetheme{Warsaw}}
#+latex_header: \useoutertheme{miniframes}
#+PROPERTY: header-args :session /home/panos/.local/share/jupyter/runtime/kernel-a766a0e8-5d5a-4e4c-9776-1ac1bc34602b.json

#+begin_export latex
\expandafter\def\expandafter\insertshorttitle\expandafter{%
  \insertshorttitle\hfill
  \insertframenumber\,/\,\inserttotalframenumber}
#+end_export
* COMMENT Data Base Model + New Cmcl Workflow
** Considerations for Designing Computational Experiments          :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:

* Univariate Targets
** Bandgap                                                         :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results graphics :eval never-export
  ax = df.PBE_bg_eV.plot.hist(bins=25, label="PBE")
  ax = df.HSE_bg_eV.plot.hist(bins=25, label="HSE", ax=ax, fc=(1,0.5,0,0.5))
  ax.set_xlabel("Bandgap [eV]")
  ax.legend()
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 616
[[file:./.ob-jupyter/28051a1ee3deb7fca4e98b5523f5f52dbf8eba1d.png]]
:END:
** Decomposition Energy                                            :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export
  ax = df.PBE_DecoE_eV.plot.hist(bins=25, label="PBE")
  ax = df.HSE_DecoE_eV.plot.hist(bins=25, label="HSE", ax=ax, fc=(1,0.5,0,0.5))
  ax.set_xlabel("Decomposition Energy [eV]")
  ax.legend()
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 623
[[file:./.ob-jupyter/8cb70032aae439b3511835a952a8a7459c616878.png]]
:END:

** SLME                                                            :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export
  ax = df.SLME_5um.plot.hist(bins=25, label="5um")
  ax = df.SLME_100um.plot.hist(bins=25, label="100um", fc=(1,0.5,0,0.5))
  ax.set_xlabel("SLME/1")
  ax.legend()
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 623
[[file:./.ob-jupyter/870564b2b7303c6cf8e47b2845d3cc9820d5ed58.png]]
:END:

* Target Transformation for Improved Discrimination
** before log transform on DecoE                                   :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export
  ax = df.PBE_DecoE_eV.plot.hist(bins=50)
  ax.axvline(0, c='k')
  ax.set_xlabel("Decomposition Energy [eV]")
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 612
[[file:./.ob-jupyter/e056881d16ad4e109a589c20d88c4ebb7d780c1f.png]]
:END:

** after split, negation and log transform                         :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export
  ax = df.PBE_DecoE_eV[df.PBE_DecoE_eV < 0 ].pipe(lambda x: -x).pipe(np.log1p).plot.hist(bins=50, label="stable")
  ax = df.PBE_DecoE_eV[df.PBE_DecoE_eV > 0 ].pipe(np.log1p).plot.hist(bins=50, label="unstable", fc=(1, 0.5, 0, 0.5), ax=ax)
  ax.set_xlabel("ln(Decomposition Energy [eV])")
  ax.legend()
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 612
[[file:./.ob-jupyter/75d5b2866730541cd4c6d8a4532da3a81e49c087.png]]
:END:

** before log transform on SLME                                    :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export 
  ax = df.SLME_5um.pipe(lambda x: x*100).plot.hist(bins=50, label="stable")
  ax.set_xlabel("SLME [%]")
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 623
[[file:./.ob-jupyter/cf44077a48127970ccc178df3874d959fa42fa7d.png]]
:END:

** after log transform on SLME                                     :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :eval never-export 
  ax = df.SLME_5um.pipe(lambda x: x*100).pipe(np.log1p).plot.hist(bins=50, label="stable")
  ax.set_xlabel("ln(SLME [%])")
  plt.show()
#+end_src

#+RESULTS:
:RESULTS:
#+attr_org: :width 623
[[file:./.ob-jupyter/ef691a38bff687da2a6509c192b2d0ca3a1e7686.png]]
:END:

* Optimization Strategy
** Example of finalists                                            :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:

| candidates               |   247 |    9 |   276 |   249 |   248 |   251 |    1 |    2 |   246 |   250 |  164 |    6 |   83 |    4 |   11 |
|--------------------------+-------+------+-------+-------+-------+-------+------+------+-------+-------+------+------+------+------+------|
| normalizer_norm          |    l1 |   l1 |    l2 |    l1 |    l1 |    l1 |   l1 |   l1 |    l1 |    l1 |  max |   l1 |   l2 |   l1 |   l1 |
| bootstrap                | False | True | False | False | False | False | True | True | False | False | True | True | True | True | True |
| ccp_alpha                |   0.0 |  0.0 |   0.0 |   0.0 |   0.0 |   0.0 |  0.0 |  0.0 |   0.0 |   0.0 |  0.0 |  0.0 |  0.0 |  0.0 |  0.0 |
| criterion                |   mse |  mse |   mse |   mse |   mse |   mse |  mse |  mse |   mse |   mse |  mse |  mse |  mse |  mse |  mse |
| max_depth                |  None | None |  None |  None |  None |  None | None | None |  None |  None | None | None | None | None | None |
| max_features             |  sqrt | sqrt |     3 |     3 |  sqrt |     3 | auto | auto |  sqrt |     3 | auto | auto | auto | auto | sqrt |
| max_leaf_nodes           |  None | None |  None |  None |  None |  None | None | None |  None |  None | None | None | None | None | None |
| max_samples              |  None |  0.9 |  None |  None |  None |  None |  0.9 |  0.9 |  None |  None |  0.9 |  0.3 |  0.9 |  0.6 |  0.9 |
| min_impurity_decrease    |   0.0 |  0.0 |   0.0 |   0.0 |   0.0 |   0.0 |  0.0 |  0.0 |   0.0 |   0.0 |  0.0 |  0.0 |  0.0 |  0.0 |  0.0 |
| min_impurity_split       |  None | None |  None |  None |  None |  None | None | None |  None |  None | None | None | None | None | None |
| min_samples_leaf         |     1 |    1 |     1 |     1 |     1 |     1 |    1 |    1 |     1 |     1 |    1 |    1 |    1 |    1 |    1 |
| min_samples_split        |     2 |    2 |     2 |     2 |     2 |     2 |    2 |    2 |     2 |     2 |    2 |    2 |    2 |    2 |    2 |
| min_weight_fraction_leaf |   0.0 |  0.0 |   0.0 |   0.0 |   0.0 |   0.0 |  0.0 |  0.0 |   0.0 |   0.0 |  0.0 |  0.0 |  0.0 |  0.0 |  0.0 |
| n_estimators             |    50 |   20 |    20 |    20 |   100 |   100 |   50 |  100 |    20 |    50 |  100 |   20 |  100 |   50 |  100 |
| n_jobs                   |     4 |    4 |     4 |     4 |     4 |     4 |    4 |    4 |     4 |     4 |    4 |    4 |    4 |    4 |    4 |
| oob_score                |   NaN | True |   NaN |   NaN |   NaN |   NaN | True | True |   NaN |   NaN | True | True | True | True | True |
|--------------------------+-------+------+-------+-------+-------+-------+------+------+-------+-------+------+------+------+------+------|
| rank_test_r2             |     1 |    2 |     3 |     4 |     5 |     6 |    7 |    8 |     9 |    10 |   11 |   13 |   15 |   24 |   22 |
| rank_test_ev             |     2 |    3 |     5 |     4 |     6 |     1 |    7 |   10 |     8 |     9 |   12 |   14 |   16 |   17 |   24 |
| rank_test_maxerr         |     5 |    2 |    12 |    38 |     8 |    18 |    1 |   15 |    59 |     6 |    3 |    4 |    7 |    9 |   10 |
| rank_test_mse            |     3 |    1 |     4 |     2 |     8 |     6 |   11 |    9 |     7 |     5 |   10 |   13 |   16 |   22 |   23 |
|--------------------------+-------+------+-------+-------+-------+-------+------+------+-------+-------+------+------+------+------+------|
| rank_sum                 |    11 |    8 |    24 |    48 |    27 |    31 |   26 |   42 |    83 |    30 |   36 |   44 |   54 |   72 |   79 |
#+TBLFM: @>$2..$16=vsum(@II..@III)

* RFR Optimization
** 1st Round winners                                               :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :async yes :pandoc org :eval never-export 
  collect_top_rankings(pd.DataFrame(rfr.cv_results_), topN=3).T.filter(regex='(rank)|(param)|(mean)', axis=0).drop('params')
#+end_src

#+RESULTS:
:results:
| index                                                 | 1         | 247       | 301       | 20        | 9         | 303       |
|-------------------------------------------------------+-----------+-----------+-----------+-----------+-----------+-----------|
| mean_fit_time                                         | 0.015821  | 0.012853  | 0.013307  | 0.021922  | 0.007352  | 0.007716  |
| mean_score_time                                       | 0.003636  | 0.00293   | 0.003217  | 0.003083  | 0.002805  | 0.003059  |
| param_normalizer__norm                                | l1        | l1        | max       | l1        | l1        | max       |
| param_randomforestregressor__bootstrap                | True      | False     | False     | True      | True      | False     |
| param_randomforestregressor__ccp_alpha                | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       |
| param_randomforestregressor__criterion                | mse       | mse       | mse       | mse       | mse       | mse       |
| param_randomforestregressor__max_depth                | None      | None      | None      | None      | None      | None      |
| param_randomforestregressor__max_features             | auto      | sqrt      | sqrt      | 3         | sqrt      | 3         |
| param_randomforestregressor__max_leaf_nodes           | None      | None      | None      | None      | None      | None      |
| param_randomforestregressor__max_samples              | 0.9       | None      | None      | 0.9       | 0.9       | None      |
| param_randomforestregressor__min_impurity_decrease    | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       |
| param_randomforestregressor__min_impurity_split       | None      | None      | None      | None      | None      | None      |
| param_randomforestregressor__min_samples_leaf         | 1         | 1         | 1         | 1         | 1         | 1         |
| param_randomforestregressor__min_samples_split        | 2         | 2         | 2         | 2         | 2         | 2         |
| param_randomforestregressor__min_weight_fraction_leaf | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       | 0.0       |
| param_randomforestregressor__n_estimators             | 50        | 50        | 50        | 100       | 20        | 20        |
| param_randomforestregressor__n_jobs                   | 4         | 4         | 4         | 4         | 4         | 4         |
| param_randomforestregressor__oob_score                | True      | NaN       | NaN       | True      | True      | NaN       |
| param_randomforestregressor__random_state             | None      | None      | None      | None      | None      | None      |
| param_randomforestregressor__verbose                  | 0         | 0         | 0         | 0         | 0         | 0         |
| param_randomforestregressor__warm_start               | False     | False     | False     | False     | False     | False     |
| mean_test_r2                                          | 0.814175  | 0.784426  | 0.77785   | 0.772828  | 0.751917  | 0.75872   |
| rank_test_r2                                          | 1         | 2         | 3         | 4         | 8         | 6         |
| mean_train_r2                                         | 0.960944  | 0.995246  | 0.997637  | 0.956679  | 0.938631  | 0.999474  |
| mean_test_ev                                          | 0.815007  | 0.792443  | 0.788221  | 0.774598  | 0.753098  | 0.76428   |
| rank_test_ev                                          | 1         | 2         | 3         | 4         | 8         | 6         |
| mean_train_ev                                         | 0.961081  | 0.995246  | 0.997637  | 0.95719   | 0.938977  | 0.999474  |
| mean_test_maxerr                                      | -0.517749 | -0.592177 | -0.60778  | -0.535528 | -0.585958 | -0.605125 |
| rank_test_maxerr                                      | 1         | 5         | 8         | 2         | 3         | 7         |
| mean_train_maxerr                                     | -0.30747  | -0.140007 | -0.079347 | -0.337684 | -0.428858 | -0.038267 |
| mean_test_mse                                         | -0.273073 | -0.295271 | -0.299793 | -0.306155 | -0.321673 | -0.298327 |
| rank_test_mse                                         | 1         | 2         | 4         | 6         | 12        | 3         |
| mean_train_mse                                        | -0.127572 | -0.042687 | -0.028489 | -0.133488 | -0.153661 | -0.014047 |
:end:

** 1st to 2nd Round Summary                                        :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
|                          | space_0         | space_1         | entropy_0 | entropy_1 |           scores_0 |           scores_1 | next_0       | next_1       |
|--------------------------+-----------------+-----------------+-----------+-----------+--------------------+--------------------+--------------+--------------|
| norm                     | [l1, l2, max]   | [l1, l2, max]   |  1.057905 |  1.057905 | [9.38, 1.22, 2.98] | [9.38, 1.22, 2.98] | [l1]         | [l1]         |
| bootstrap                | [True]          | [False]         |  0.367504 |  0.298774 |             [6.86] |             [6.72] | [True]       | [False]      |
| ccp_alpha                | [0.0, 0.5, 1.0] | [0.0, 0.5, 1.0] | -0.000000 | -0.000000 |                NaN |                NaN | [0.0]        | [0.0]        |
| criterion                | [mse]           | [mse]           | -0.000000 | -0.000000 |                NaN |                NaN | [mse]        | [mse]        |
| max_depth                | [None]          | [None]          | -0.000000 | -0.000000 |                NaN |                NaN | [None]       | [None]       |
| max_features             | [auto, sqrt, 3] | [auto, sqrt, 3] |  1.073394 |  1.073394 |  [4.87, 4.61, 4.1] |  [4.87, 4.61, 4.1] | [auto, sqrt] | [auto, sqrt] |
| max_leaf_nodes           | [None]          | [None]          | -0.000000 | -0.000000 |                NaN |                NaN | [None]       | [None]       |
| max_samples              | [0.9, 0.6, 0.3] | [None]          |  0.367504 |  0.298774 |   [6.86, 0.0, 0.0] |             [6.72] | [0.9]        | [None]       |
| min_impurity_decrease    | [0.0]           | [0.0]           | -0.000000 | -0.000000 |                NaN |                NaN | [0.0]        | [0.0]        |
| min_impurity_split       | [None]          | [None]          | -0.000000 | -0.000000 |                NaN |                NaN | [None]       | [None]       |
| min_samples_leaf         | [1]             | [1]             | -0.000000 | -0.000000 |                NaN |                NaN | [1]          | [1]          |
| min_samples_split        | [2]             | [2]             | -0.000000 | -0.000000 |                NaN |                NaN | [2]          | [2]          |
| min_weight_fraction_leaf | [0.0]           | [0.0]           | -0.000000 | -0.000000 |                NaN |                NaN | [0.0]        | [0.0]        |
| n_estimators             | [20, 50, 100]   | [20, 50, 100]   |  1.057905 |  1.057905 | [1.99, 7.82, 3.77] | [1.99, 7.82, 3.77] | [50]         | [50]         |
| n_jobs                   | [4]             | [4]             | -0.000000 | -0.000000 |                NaN |                NaN | [4]          | [4]          |
| oob_score                | [True]          | NaN             |  0.367504 |       NaN |             [6.86] |                NaN | [True]       | NaN          |
| random_state             | [None]          | [None]          | -0.000000 | -0.000000 |                NaN |                NaN | [None]       | [None]       |
| verbose                  | [0]             | [0]             | -0.000000 | -0.000000 |                NaN |                NaN | [0]          | [0]          |
| warm_start               | [False]         | [False]         | -0.000000 | -0.000000 |                NaN |                NaN | [False]      | [False]      |

** 2nd Round winners                                               :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
#+begin_src jupyter-python :exports results :results raw drawer :async yes :pandoc org :eval never-export 
  collect_top_rankings(pd.DataFrame(rfr.cv_results_), topN=3).T.filter(regex='(rank)|(param)|(mean)', axis=0).drop('params')
#+end_src

** 2nd to 3rd Round Summary                                        :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
